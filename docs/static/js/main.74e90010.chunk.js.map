{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","propType","PropType","func","isRequired","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"wPAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC/BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAkBO,OACpCN,EAAc,OAOZ,2BACAO,KAAK,OACLC,MAAOT,EACPU,SAlBoB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YAuB/BZ,EAAYe,SAAS,CACjBd,c,OAAee,EAASC,KAAKC,Y,2BC/BpBC,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdC,EADc,iDACgCC,UAAUH,GAD1C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGCA,EAAKC,OAHN,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAACC,GACnB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCCRO,EAAe,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIrC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAKA,KCJJO,EAAW,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFhB,SAACA,GAAY,IAAD,EACblB,mBAAS,CAC9ByB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAoBtC,OAdGC,qBAAU,WAETxB,EAASC,GACRwB,MAAK,SAACC,GAEHH,EAAS,CACLf,KAAMkB,EACPL,SAAS,SAKf,CAACpB,IAECqB,EDf4BK,CAAa1B,GAAhCa,EAH0B,EAG/BN,KAAaa,EAHkB,EAGlBA,QAGpB,OACI,oCACA,wBAAIJ,UAAU,qCAAqChB,GACnDoB,GAAW,uBAAGJ,UAAU,oCAAb,eACX,yBAAKA,UAAU,aAEfH,EAAOJ,KAAI,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACAiB,IAAKjB,EAAIC,IACLD,UESCkB,EAzBM,WAAK,IAAD,EAEe9C,mBAAS,CAAC,kBAFzB,mBAEd+C,EAFc,KAEFhD,EAFE,KAIzB,OACA,oCACI,6CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC/B,6BACG,4BAEAgD,EAAWpB,KAAK,SAAAT,GAAQ,OAEtB,kBAAC,EAAD,CACA2B,IAAK3B,EACLA,SAAUA,UCdhB8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.74e90010.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropType from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2 ){\r\n        setCategories(cats=>[inputValue, ...cats]);\r\n        setInputValue('');     \r\n        }\r\n       \r\n    } \r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n          <input \r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n          />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propType={\r\n    setCategories: PropType.func.isRequired\r\n}","\r\nexport const getGifts = async(category) =>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=8n0u17jlOtdO4WkFyr6m0sKJue9dVU96`;\r\n     const resp = await fetch(url);\r\n     const {data}= await resp.json();\r\n\r\n     const gifs = data.map((img)=>{\r\n         return{\r\n             id: img.id,\r\n             title: img.title,\r\n             url: img.images.downsized_medium.url\r\n         }\r\n     });\r\n\r\n     return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GiftGridItem = ({id, title, url}) => {\r\n    \r\n    // console.log(id,title, url);\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GiftGridItem } from './GiftGridItem';\r\n\r\n\r\nexport const GiftGrid = ( {category} ) => {\r\n\r\n \r\n    const {data:images, loading} = useFetchGifs(category);   \r\n   \r\n   \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n       {loading && <p className=\"animate__animated animate__flash\">Loading ...</p>}\r\n        <div className=\"card-grid\">\r\n        {\r\n        images.map(img=>(\r\n          <GiftGridItem\r\n          key={img.id} \r\n          {...img}\r\n          />\r\n        ))\r\n        \r\n        }\r\n\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState,useEffect } from \"react\"\r\nimport { getGifts } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs=(category)=>{\r\nconst [state, setState] =useState({\r\n    data: [],\r\n    loading: true\r\n})\r\n\r\n   useEffect(()=>{\r\n      \r\n    getGifts(category)\r\n    .then((imgs)=>{\r\n       \r\n        setState({\r\n            data: imgs,\r\n           loading: false\r\n        })\r\n       \r\n    })    \r\n\r\n   },[category])\r\n\r\nreturn state;\r\n\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GiftGrid } from './components/GiftGrid';\r\n\r\nconst GifExpertApp = ()=>{\r\n\r\n    const [categories, setCategories] = useState(['One punch man']);\r\n\r\nreturn(\r\n<>\r\n    <h1>Gif ExpertApp</h1>\r\n    <AddCategory setCategories={setCategories}/>\r\n <hr />\r\n    <ol>\r\n    {\r\n    categories.map( category =>(\r\n      \r\n      <GiftGrid \r\n      key={category}\r\n      category={category}\r\n      />\r\n    \r\n      ) )\r\n    }\r\n    </ol>\r\n</>\r\n )\r\n}\r\n\r\nexport default GifExpertApp;\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GiftExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}